server {
        listen 80;
        listen [::]:80;

        server_name [DOMAIN];
        return 301 https://$server_name$request_uri;
}

# Upstream to abstract backend connection(s) for php
upstream php {
        server unix:/var/run/php/php7.2-fpm.sock;
}

server {
        ## Your website name goes here.
        server_name [DOMAIN];
        ## Your only path reference.
        root /var/www/[DOMAIN]/public_html;
        ## This should be in your http block and if it is, it's not needed here.
        index index.php;
        location = /favicon.ico {
                log_not_found off;
                access_log off;
        }
        location = /robots.txt {
                allow all;
                log_not_found off;
                access_log off;
        }
        location / {
                # This is cool because no php is touched for static content.
                # include the "?$args" part so non-default permalinks doesn't break when using query string
                try_files $uri $uri/ /index.php?$args;
        }
        location ~ \.php$ {
                #NOTE: You should have "cgi.fix_pathinfo = 0;" in php.ini
                include fastcgi.conf;
                fastcgi_intercept_errors on;
                fastcgi_pass php;
        }
        location ~* \.(js|css|png|jpg|jpeg|gif|ico)$ {
                expires max;
                log_not_found off;
        }

        error_page 404 /404.html;

#        error_page 500 502 503 504 /50x.html;
#        location = /50x.html {
#                root /usr/share/nginx/html;
#        }

   add_header X-XSS-Protection "1; mode=block";

   error_log /var/log/nginx/[DOMAIN]_error.log;
   access_log /var/log/nginx/[DOMAIN]_access.log;


    listen [::]:443 ssl; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/[DOMAIN]/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/[DOMAIN]/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}
